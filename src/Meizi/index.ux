<template>
  <div id="Meizi">
    <refresh @refresh="refreshList" refreshing="{{isRefreshing}}">
      <list class="list" @scrollbottom="loadMore">
        <block for="{{meiziInfo.list}}">
          <list-item type="imgItem" class="img-item">
            <image @click="shouModel($item.url)" class="img" src="{{$item.url}}" />
          </list-item>
        </block>
        <list-item type="loadMore" class="load-more">
          <progress type="circular"></progress>
          <text>{{meiziInfo.hasMore?'加载更多':'已经没有更多妹子啦~'}}</text>
        </list-item>
      </list>
    </refresh>
    <stack show="{{model.show}}" class="mask" @click="closeModel">
      <image class="big-img" src="{{model.url}}" />
    </stack>
  </div>
</template>
<style lang="less" scoped>
#Meizi {
  font-size: 16px;
  padding: 20px 0;
  .list {
    columns: 2;
  }
  .img-item {
    margin: 0 10px 20px;
    height: 400px;
  }
  .img {
    width: 100%;
    height: 100%;
  }
  .load-more {
    display: flex;
    justify-content: center;
    padding-top: 20px;
  }
  .mask {
    position: fixed;
    height: 100%;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.5);
    height: 100%;
    .big-img {
      width: 100%;
    }
  }
}
</style>
<script>
export default {
  data: {
    pageSize: 10,
    page: 1,
    isRefreshing: false,
    // 妹子列表
    meiziInfo: {
      list: [],
      hasMore: true
    },
    // 显示model
    model: {
      show: false,
      url: ''
    }
  },
  refreshList(evt) {
    this.isRefreshing = evt.refreshing
    this.getMeiziList()
  },
  getMeiziList() {
    this.$app.$def.api
      .getData(`福利/${this.pageSize}/${this.page}`)
      .then(response => {
        if (this.isRefreshing) {
          this.$app.$def.prompt.showToast({
            message: '刷新成功'
          })
          this.isRefreshing = false
        }
        if (response.results.length <= 0) {
          this.meiziInfo.hasMore = false
        } else {
          this.meiziInfo.list.push(...response.results)
        }
      })
      .catch(error => {
        console.log('error', error)
      })
  },
  shouModel(url) {
    this.$app.$def.storage.set({
      key: 'test',
      value: url,
      success: response => {
        console.log(response)
      },
      fail: error => {
        console.log(error)
      }
    })
    this.model = {
      show: true,
      url
    }
  },
  closeModel() {
    this.$app.$def.storage.get({
      key: 'test',
      success: data => {
        console.log('handling success', data)
      },
      fail: (data, code) => {
        console.log('handling fail, code=' + code)
      }
    })
    this.model = {
      show: false,
      url: ''
    }
  },
  loadMore() {
    this.page++
    this.getMeiziList()
  },
  onInit() {
    this.$page.setTitleBar({ text: '妹子妹子~~' })
    this.getMeiziList()
  },
  onReady() {},
  onShow() {
    // this.$page.setTitleBar({ text: '妹子妹子~~' })
  },
  onHide() {},
  onDestroy() {},
  onBackPress() {},
  onMenuPress() {}
}
</script>
